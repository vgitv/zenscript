#!/bin/bash
set -euo pipefail

# Script utile pour compiler un document depuis Vim :
# si un Makefile est trouvé dans le dosser courant, alors il est exécuté,
# sinon, règle spécifique en fonction de l'extension du fichier.

dryrun='n'
[[ $1 = '--dryrun' ]] && dryrun=y && shift
filePath="$(realpath "$1")"
directory="$(dirname "${filePath}")"
fileName="$(basename "${filePath}")"
fileBaseName="${fileName%.*}"
extension="${fileName##*.}"
item="$(basename "${directory}")"
# make sure item has no space (or pandoc will fail)
item="${item// /_}"

# echo "filePath $filePath"
# echo "directory ${directory}"
# echo "fileName $fileName"
# echo "fileBaseName $fileBaseName"
# echo "extension $extension"

function safeRun {
    [[ $1 =~ =y ]] && shift && echo "$*" && exit
    shift
    if "$@"; then
        echo 'Done.'
    else
        echo "$*"
        echo 'ERROR'
        exit 1
    fi
}

if [[ -e Makefile ]]; then
    echo 'Makefile'
    make
else
    case "${extension}" in
        'md')
            echo 'Markdown file detected.'
            echo 'Generating HTML file with pandoc...'
            cp "${HOME}/.local/src/css_styles/main-dark.css" "${directory}"
            out="${directory}/${fileBaseName}.html"
            safeRun --dryrun="${dryrun}" pandoc \
                -sN \
                -V colorlinks \
                -c 'main-dark.css' \
                --highlight-style=breezeDark \
                --metadata pagetitle="${item}" \
                "${filePath}" \
                -o "${out}"
                echo "${out/$(pwd)\//} generated."
            ;;
        *)
            echo "Unknown extension ${extension}."
            ;;
    esac
fi
